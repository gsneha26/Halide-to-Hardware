{"top":"global.DesignTop",
"namespaces":{
  "global":{
    "modules":{
      "DesignTop":{
        "type":["Record",[
          ["clk",["Named","coreir.clkIn"]],
          ["in_arg_0_0_0",["Array",16,"BitIn"]],
          ["in_en","BitIn"],
          ["out_0_0",["Array",16,"Bit"]],
          ["reset","BitIn"],
          ["valid","Bit"]
        ]],
        "instances":{
          "ub_input":{
            "genref":"lakelib.new_unified_buffer",
            "genargs":{"chain_en":["Bool",false], "chain_idx":["Int",0], "init":["Json",null], "istreams":["Json",{"input":{"input_block":[1,1,1],"input_chunk":[1,1,1],"input_range":[1,1,0,0,0,0],"input_starting_addrs":[0],"input_stride":[1,1,0,0,0,0]}}], "logical_size":["Json",{"capacity":[64,64, 2]}], "ostreams":["Json",{"conv1":{"num_stencil_acc_dim":0,"output_block":[1,1],"output_range":[64,64],"output_starting_addrs":[0],"output_stencil":[1,1],"output_stride":[2,128],"stencil_width":[0,0]},
                                                                                                                                                                                                                                                                                                                                       "conv2":{"num_stencil_acc_dim":0,"output_block":[1,1],"output_range":[64,64],"output_starting_addrs":[1],"output_stencil":[1,1],"output_stride":[2,128],"stencil_width":[0,0]}}], "width":["Int",16]}
          },
          "ub_input_flush":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",false]}
          },
          "weight":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0001"]}
          },
          "multiply":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "add_inputs":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",16]}
          },
          "add_out_accum":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",16]}
          },
          "output_reg":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'hxxxx"]}
          },
          "output_fsm":{
            "genref":"commonlib.counter",
            "genargs":{"width":["Int",16], "min":["Int",0], "max":["Int",8], "inc":["Int",1]}
          },
          "init_phase_value":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0000"]}
          },
          "output_dataout_mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",16]}
          },
          "init_phase_selector":{
            "genref":"coreir.neq",
            "genargs":{"width":["Int",16]}
          },
          "output_valid_mux":{
            "modref":"corebit.mux"
          },
          "output_delay_reg":{
              "modref":"corebit.reg"
          },
          "output_delay_enmux":{
            "modref":"corebit.mux"
          },
          "invalid_bit":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",false]}
          },
          "output_bias":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0000"]}
          }
        },
        "connections":[
            ["self.in_arg_0_0_0","ub_input.datain_input_0"],
            ["ub_input_flush.out","ub_input.flush"],
            ["self.in_en","ub_input.wen"],
            ["self.in_en","ub_input.ren"],
            ["multiply.in0","weight.out"],
            ["multiply.in1","ub_input.dataout_conv1_0"],
            ["add_inputs.in1","ub_input.dataout_conv2_0"],
            ["add_inputs.in0","multiply.out"],
            ["add_out_accum.in0","add_inputs.out"],
            ["add_out_accum.in1","output_dataout_mux.out"],
            ["add_out_accum.out","output_reg.in"],
            ["output_bias.out","output_dataout_mux.in0"],
            ["output_reg.out","output_dataout_mux.in1"],
            ["output_fsm.out","init_phase_selector.in0"],
            ["init_phase_value.out","init_phase_selector.in1"],
            ["output_dataout_mux.sel","init_phase_selector.out"],
            ["output_fsm.reset","self.reset"],
            ["ub_input.valid","output_fsm.en"],
            ["output_reg.out","self.out_0_0"],
            ["invalid_bit.out","output_valid_mux.in1"],
            ["output_delay_reg.out","output_valid_mux.in0"],
            ["output_valid_mux.sel","init_phase_selector.out"],
            ["output_delay_reg.in","output_delay_enmux.out"],
            ["output_delay_reg.out","output_delay_enmux.in0"],
            ["ub_input.valid","output_delay_enmux.in1"],
            ["init_phase_selector.out","output_delay_enmux.sel"],
            ["output_valid_mux.out","self.valid"]
        ]
      }
    }
  }
}
}
